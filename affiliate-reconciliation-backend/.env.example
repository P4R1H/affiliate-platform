# Logging
LOG_LEVEL=INFO
LOG_FILE=logs/app.log

# Mock / Integration Tuning
MOCK_FAILURE_RATE=0.05
REDDIT_LINK_RESOLVE_TIMEOUT=10
INTEGRATIONS_RANDOM_SEED=

# Queue / Redis
USE_REDIS_QUEUE=false
REDIS_URL=redis://localhost:6379/0
REDIS_HEALTH_CHECK_TIMEOUT=2.0

# Discord Bot (optional). Set ENABLE_DISCORD_BOT=true in config and provide token to run.
ENABLE_DISCORD_BOT=false
DISCORD_BOT_TOKEN=your_discord_bot_token_here
# Comma separated guild IDs for faster slash command registration (optional)
DISCORD_COMMAND_GUILDS=

# Internal bot auth token (used for submissions proxy auth, not shared with affiliates)
BOT_INTERNAL_TOKEN=change_me_bot_internal_secret

# Backend API base URL that the Discord bot will call
API_BASE_URL=http://localhost:8000/api/v1

# Database configuration (defaults to local sqlite db if unset)
DATABASE_URL=sqlite+pysqlite:///./test.db

# CORS origins (comma separated). Use explicit domains in production.
CORS_ORIGINS=*

# --- Initial Admin (optional) ---
# If ADMIN_EMAIL is set, the app will ensure an ADMIN affiliate exists with that email.
# If it does not exist it will be created (or promoted if existing non-admin). A random API key
# will be generated unless ADMIN_API_KEY is provided. Key is logged ONCE (preview) on creation.
ADMIN_NAME=AdminUser
ADMIN_EMAIL=
ADMIN_API_KEY=